CMAKE_MINIMUM_REQUIRED( VERSION 3.19.8 )

set(ATOMIC_QUEUE_VERSION 1.5.0)

PROJECT(atomic_queue LANGUAGES CXX VERSION ${ATOMIC_QUEUE_VERSION})

OPTION( ATOMIC_QUEUE_BUILD_TESTS
    "If the tests should be built."
    OFF
)

OPTION( ATOMIC_QUEUE_BUILD_EXAMPLES
    "If examples should be built."
    OFF
)

if ( PROJECT_IS_TOP_LEVEL )
    set(CMAKE_CXX_STANDARD 14)
    set(CMAKE_CXX_STANDARD_REQUIRED)
endif()

add_subdirectory( include )

if ( ATOMIC_QUEUE_BUILD_TESTS )
    enable_testing()
endif()

if ( ATOMIC_QUEUE_BUILD_TESTS OR ATOMIC_QUEUE_BUILD_EXAMPLES)
    add_subdirectory( src )
endif()

add_library(max0x7ba::atomic_queue ALIAS atomic_queue)

message(STATUS "Generating install")
set(project_config_in "${CMAKE_CURRENT_LIST_DIR}/cmake/atomicQueueConfig.cmake.in")
set(project_config_out "${CMAKE_CURRENT_BINARY_DIR}/atomicQueueConfig.cmake")
set(config_targets_file "atomicQueueConfigTargets.cmake")
set(version_config_file "${CMAKE_CURRENT_BINARY_DIR}/atomicQueueConfigVersion.cmake")
set(export_dest_dir "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
set(pkgconfig_install_dir "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
set(pkg_config "${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc")

install(DIRECTORY include/ DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")

install(TARGETS atomic_queue 
    EXPORT atomic_queue
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

# ---------------------------------------------------------------------------------------
# Install pkg-config file
# ---------------------------------------------------------------------------------------
if(IS_ABSOLUTE "${CMAKE_INSTALL_INCLUDEDIR}")
    set(PKG_CONFIG_INCLUDEDIR "${CMAKE_INSTALL_INCLUDEDIR}")
else()
    set(PKG_CONFIG_INCLUDEDIR "\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}")
endif()
if(IS_ABSOLUTE "${CMAKE_INSTALL_LIBDIR}")
    set(PKG_CONFIG_LIBDIR "${CMAKE_INSTALL_LIBDIR}")
else()
    set(PKG_CONFIG_LIBDIR "\${exec_prefix}/${CMAKE_INSTALL_LIBDIR}")
endif()
get_target_property(PKG_CONFIG_DEFINES spdlog INTERFACE_COMPILE_DEFINITIONS)
string(REPLACE ";" " -D" PKG_CONFIG_DEFINES "${PKG_CONFIG_DEFINES}")
string(CONCAT PKG_CONFIG_DEFINES "-D" "${PKG_CONFIG_DEFINES}")
configure_file("cmake/${PROJECT_NAME}.pc.in" "${pkg_config}" @ONLY)
install(FILES "${pkg_config}" DESTINATION "${pkgconfig_install_dir}")

# ---------------------------------------------------------------------------------------
# Install CMake config files
# ---------------------------------------------------------------------------------------
export(TARGETS atomic_queue NAMESPACE max0x7ba::
        FILE "${CMAKE_CURRENT_BINARY_DIR}/${config_targets_file}")
install(EXPORT atomic_queue DESTINATION ${export_dest_dir} NAMESPACE max0x7ba:: FILE ${config_targets_file})

include(CMakePackageConfigHelpers)
configure_package_config_file("${project_config_in}" "${project_config_out}" INSTALL_DESTINATION ${export_dest_dir})

write_basic_package_version_file("${version_config_file}" COMPATIBILITY SameMajorVersion)
install(FILES "${project_config_out}" "${version_config_file}" DESTINATION "${export_dest_dir}")